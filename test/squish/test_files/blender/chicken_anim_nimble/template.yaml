specificationVersion: jobtemplate-2023-09
name: chicken_anim_nimble
description: Chicken file
parameterDefinitions:
- name: BlenderFile
  type: PATH
  objectType: FILE
  dataFlow: IN
  userInterface:
    control: CHOOSE_INPUT_FILE
    label: Blender File
    fileFilters:
    - label: Blender Files
      patterns:
      - '*.blend'
    - label: All Files
      patterns:
      - '*'
  description: Choose the Blender scene file you want to render.
- name: RenderEngine
  type: STRING
  default: cycles
  allowedValues:
  - eevee
  - workbench
  - cycles
- name: RenderScene
  type: STRING
  userInterface:
    control: LINE_EDIT
    label: Scene
    groupLabel: Blender Settings
  default: Scene
  description: The scene you want to render (scene name).
- name: ViewLayer
  type: STRING
  userInterface:
    control: LINE_EDIT
    label: view_layer
  description: Choose the layer to render.
  default: ViewLayer
- name: Frames
  type: STRING
  userInterface:
    control: LINE_EDIT
    label: Frames
    groupLabel: Blender Settings
  default: 1-1
  description: The frames to render. E.g. 1-3,8,11-15
- name: OutputDir
  type: PATH
  objectType: DIRECTORY
  dataFlow: OUT
  userInterface:
    control: CHOOSE_DIRECTORY
    label: Output Directory
  description: Choose the render output directory.
- name: OutputFileName
  type: STRING
  userInterface:
    control: LINE_EDIT
    label: Output File Name
  default: output_####
  description: Enter the output filename (without extension).
- name: OutputFormat
  type: STRING
  userInterface:
    control: DROPDOWN_LIST
    label: Output File Format
  description: Choose the file format to render as.
  default: PNG
  allowedValues:
  - TGA
  - RAWTGA
  - JPEG
  - IRIS
  - IRIZ
  - PNG
  - HDR
  - TIFF
  - OPEN_EXR
  - OPEN_EXR_MULTILAYER
  - CINEON
  - DPX
  - DDS
  - JP2
  - WEBP
- name: StrictErrorChecking
  type: STRING
  userInterface:
    control: CHECK_BOX
    label: Strict Error Checking
    groupLabel: Blender Settings
  description: Fail when errors occur.
  default: 'false'
  allowedValues:
  - 'true'
  - 'false'
- name: ResolutionX
  type: INT
  userInterface:
    control: SPIN_BOX
    label: Image Width
    groupLabel: Blender Settings
  minValue: 1
  description: The image width.
- name: ResolutionY
  type: INT
  userInterface:
    control: SPIN_BOX
    label: Image Height
    groupLabel: Blender Settings
  minValue: 1
  description: The image height.
steps:
- name: RenderLayer
  parameterSpace:
    taskParameterDefinitions:
    - name: Frame
      type: INT
      range: '{{Param.Frames}}'
    - name: Camera
      type: STRING
      range:
      - Camera
  stepEnvironments:
  - name: Blender
    description: Runs Blender in the background.
    script:
      embeddedFiles:
      - name: initData
        filename: init-data.yaml
        type: TEXT
        data: |-
          scene_file: {{Param.BlenderFile}}
          render_engine: {{Param.RenderEngine}}
          render_scene: {{Param.RenderScene}}
          view_layer: RenderLayer
          output_dir: {{Param.OutputDir}}
          output_file_name: {{Param.OutputFileName}}
          output_format: {{Param.OutputFormat}}
          renderer: cycles
          output_file_prefix: {{Param.OutputFileName}}
          image_width: {{Param.ResolutionX}}
          image_height: {{Param.ResolutionY}}
      actions:
        onEnter:
          command: blender-openjd
          args:
          - daemon
          - start
          - --connection-file
          - '{{Session.WorkingDirectory}}/connection.json'
          - --init-data
          - file://{{Env.File.initData}}
          cancelation:
            mode: NOTIFY_THEN_TERMINATE
        onExit:
          command: blender-openjd
          args:
          - daemon
          - stop
          - --connection-file
          - '{{ Session.WorkingDirectory }}/connection.json'
          cancelation:
            mode: NOTIFY_THEN_TERMINATE
  script:
    embeddedFiles:
    - name: runData
      filename: run-data.yaml
      type: TEXT
      data: |
        frame: {{Task.Param.Frame}}
        camera: '{{Task.Param.Camera}}'
    actions:
      onRun:
        command: blender-openjd
        args:
        - daemon
        - run
        - --connection-file
        - '{{ Session.WorkingDirectory }}/connection.json'
        - --run-data
        - file://{{ Task.File.runData }}
        cancelation:
          mode: NOTIFY_THEN_TERMINATE
